{"version":3,"sources":["generator.js","validate.js","guess-number-game.js","play-game.js"],"names":["Generator","answers","length","random","Math","floor","includes","push","join","module","exports","window","Validate","input","inputs","split","charCodes","filter","a","charCodeAt","require","GuessNumberGame","generator","answer","generate","count","validateInput","compare","position","includeNumber","str","console","log","item","index","guessNumber","results","document","getElementById","addEventListener","inputNumber","history","innerHTML","value","result","test","splitResults","innerText","clearGame"],"mappings":"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","file":"play-game.81e11a02.map","sourceRoot":"..","sourcesContent":["class Generator {\n    constructor() {\n\n    }\n\n    generate() {\n        const answers = [];\n        while (answers.length < 4) {\n            const random = Math.floor(Math.random() * 10);\n            if (!answers.includes(random)) {\n                answers.push(random);\n            }\n        }\n\n        return answers.join(' ');\n    }\n}\n\nif (typeof module !== \"undefined\") {\n\n    module.exports = Generator;\n}\n\nif (typeof window !== \"undefined\") {\n    window.Generator = Generator\n}","class Validate {\n    constructor() {\n\n    }\n\n    validateInput(input) {\n        const inputs = input.split(' ');\n        const charCodes = inputs.filter(a => a.charCodeAt(0) > 57 || a.charCodeAt(0) < 48)\n        return inputs.length === 4 && charCodes.length === 0;\n    }\n}\n\nif (typeof module !== \"undefined\") {\n\n    module.exports = Validate;\n}\n\nif (typeof window !== \"undefined\") {\n    window.Validate = Validate\n}","const Validate = require('./validate');\n\nclass GuessNumberGame {\n    constructor(generator) {\n        this.answer = generator.generate();\n        this.count = 0;\n    }\n\n    test(input) {\n        if (new Validate().validateInput(input)) {\n            const {position, includeNumber} = this.compare(input);\n            let str = `${position}A${includeNumber - position}B`;\n            if (this.count >= 5) {\n                str += '\\ngame over';\n            }\n\n            this.count++;\n            return str;\n        } else {\n            return 'wrong input';\n        }\n    }\n\n    compare(input) {\n        const inputs = input.split(' ');\n        const answers = this.answer.split(' ');\n        console.log(answers, '------------')\n        const position = inputs.filter((item, index) => answers[index] === item).length;\n        const includeNumber = inputs.filter(item => answers.includes(item)).length\n\n        return {position, includeNumber};\n    }\n}\n\n\nif (typeof module !== \"undefined\") {\n    module.exports = GuessNumberGame;\n}\n\nif (typeof window !== \"undefined\") {\n    window.GuessNumberGame = GuessNumberGame\n}\n","const Generator = require('./generator');\nconst GuessNumberGame = require(\"./guess-number-game\");\n\nlet generator = new Generator();\nlet guessNumber = new GuessNumberGame(generator);\nlet results = [];\n\ndocument.getElementById(\"submit\").addEventListener(\"click\", function inputNumber() {\n    let history = document.getElementById(\"history\");\n    if (results.length === 0) {\n        history.innerHTML = \"<tr><td>输入</td><td>输出</td></tr>\"\n    }\n    const input = document.getElementById(\"input\").value.split('').join(' ');\n    let result = guessNumber.test(input)\n    const splitResults = result.split('\\n')\n\n    results.push({input, result : splitResults[0]});\n\n    history.innerHTML += `<tr><td>${input}</td><td>${splitResults[0]}</td></tr>`;\n\n    if (splitResults.length > 1) {\n        document.getElementById(\"message\").innerText = splitResults[1]\n        clearGame();\n    } else if (result === '4A0B') {\n        document.getElementById(\"message\").innerText = \"you win\"\n        clearGame();\n    } else {\n        document.getElementById(\"message\").innerText =\"\";\n    }\n})\n\nfunction clearGame() {\n    results = [];\n    guessNumber = new GuessNumberGame(generator);\n}"]}